[{"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\router\\AppRouter.js":"2","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\Header.js":"3","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\ProductsPage.js":"4","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\ProductForm.js":"5","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\FormInputs.js":"6","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\ImageUploader.js":"7"},{"size":199,"mtime":1611091947969,"results":"8","hashOfConfig":"9"},{"size":597,"mtime":1611372856147,"results":"10","hashOfConfig":"9"},{"size":468,"mtime":1611104684217,"results":"11","hashOfConfig":"9"},{"size":142,"mtime":1611103840088,"results":"12","hashOfConfig":"9"},{"size":287,"mtime":1611372883458,"results":"13","hashOfConfig":"9"},{"size":3053,"mtime":1611442064449,"results":"14","hashOfConfig":"9"},{"size":2495,"mtime":1611441973921,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"msq8kn",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\index.js",[],["32","33"],"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\router\\AppRouter.js",[],"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\Header.js",[],"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\ProductsPage.js",[],"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\ProductForm.js",[],"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\FormInputs.js",[],"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\ImageUploader.js",["34"],"import React, { useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport FilerobotImageEditor from 'filerobot-image-editor';\r\n\r\nconst ImageUploader = () => {\r\n  \r\n  const [show, toggle] = useState(false);\r\n  const [file, setFile] = useState([]);\r\n  const [fileName, setFileName] = useState('');\r\n  const [previewSrc, setPreviewSrc] = useState(''); \r\n\r\n  const editorConfig = {\r\n    tools: ['adjust', 'effects', 'filters', 'rotate', 'crop', 'resize'],\r\n    translations: {\r\n      en: {\r\n        'toolbar.download': 'Accept',\r\n      }\r\n    }\r\n  }\r\n\r\n  const onCloseEditor = () => {\r\n    toggle(false);\r\n  }\r\n\r\n  const onBeforeEditor = ({ canvas }) => {\r\n    const editedImageData = canvas.toDataURL();\r\n    setFile(editedImageData);\r\n    setPreviewSrc(editedImageData);    \r\n    \r\n    return false;\r\n  }\r\n  \r\n  const onDrop = (acceptedFiles) => {\r\n    // onDrop always returns an array \r\n    const [uploadedFile] = acceptedFiles;\r\n    \r\n    setFileName(uploadedFile.name);\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.readAsDataURL(uploadedFile);\r\n    fileReader.onload = () => {           \r\n      setPreviewSrc(fileReader.result);\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className=\"drop-zone-container\">    \r\n      <Dropzone       \r\n        accept={\"image/*\"}\r\n        onDrop={onDrop}\r\n        // onDrop={onDrop}\r\n        // onDragEnter={() => updateBorder('over')}\r\n        // onDragLeave={() => updateBorder('leave')}\r\n      >\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div {...getRootProps({ className: 'drop-zone' })} >\r\n            <input {...getInputProps()} />\r\n            <p>Drag and drop a image OR click here to select a image</p>\r\n            {fileName && (\r\n              <div>\r\n                <strong>Selected file:</strong> {fileName}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Dropzone> \r\n      <FilerobotImageEditor\r\n        show={show}\r\n        src={previewSrc}\r\n        config={editorConfig}\r\n        onClose={onCloseEditor}        \r\n        onBeforeComplete= {onBeforeEditor}\r\n      /> \r\n      { previewSrc ? (\r\n        <span>\r\n          <div className=\"preview-area\">\r\n            <img src={previewSrc} alt=\"Preview\" onClick={() =>{ toggle(true) }}/>\r\n          </div>\r\n        </span>\r\n      ) : (\r\n        <span className=\"preview-message\">\r\n          <p>Image preview will be shown here after selection</p>\r\n        </span>\r\n      )} \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageUploader;\r\n\r\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":8,"column":10,"nodeType":"41","messageId":"42","endLine":8,"endColumn":14},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'file' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]