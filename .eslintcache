[{"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\router\\AppRouter.js":"2","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\Header.js":"3","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\ProductsPage.js":"4","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\ProductForm.js":"5","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\FormInputs.js":"6","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\ImageUploader.js":"7","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\utils\\constants.js":"8","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\utils\\helpers.js":"9"},{"size":199,"mtime":1611091947969,"results":"10","hashOfConfig":"11"},{"size":597,"mtime":1612671736135,"results":"12","hashOfConfig":"11"},{"size":468,"mtime":1611104684217,"results":"13","hashOfConfig":"11"},{"size":143,"mtime":1612671520052,"results":"14","hashOfConfig":"11"},{"size":1687,"mtime":1612912158606,"results":"15","hashOfConfig":"11"},{"size":2973,"mtime":1612746054326,"results":"16","hashOfConfig":"11"},{"size":3830,"mtime":1612743437461,"results":"17","hashOfConfig":"11"},{"size":47,"mtime":1611463573768,"results":"18","hashOfConfig":"11"},{"size":664,"mtime":1612674316853,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"msq8kn",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\index.js",[],["40","41"],"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\router\\AppRouter.js",[],"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\Header.js",[],"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\ProductsPage.js",[],"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\ProductForm.js",["42","43"],"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\FormInputs.js",[],"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\components\\ImageUploader.js",["44"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport FilerobotImageEditor from 'filerobot-image-editor';\r\n\r\nconst ImageUploader = ({onSetImage}) => {\r\n  \r\n  const [show, toggle] = useState(false);  \r\n  const [fileData, setFileData] = useState({});\r\n  const [imageError, setImageError] = useState('');\r\n  const [previewSrc, setPreviewSrc] = useState('');  \r\n  const dropRef = useRef(); \r\n\r\n  const editorConfig = {\r\n    tools: ['adjust', 'effects', 'filters', 'rotate', 'crop', 'resize'],\r\n    translations: {\r\n      en: {\r\n        'toolbar.download': 'Accept',\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    \r\n    if(previewSrc.length > 0 && Object.keys(fileData).length > 0) {\r\n      onSetImage(previewSrc, fileData);\r\n    }\r\n    \r\n  }, [previewSrc, fileData]);\r\n\r\n  const onCloseEditor = () => {\r\n    toggle(false);\r\n  }\r\n\r\n  const onBeforeEditor = ({ canvas }) => {\r\n    \r\n    const editedImageData = canvas.toDataURL();\r\n    setPreviewSrc(editedImageData);   \r\n        \r\n    return false;\r\n  }  \r\n  \r\n  const onDropAccepted = (acceptedFiles) => {    \r\n    // onDrop always returns an array \r\n    // take the first element \r\n    const [ uploadedFile ] = acceptedFiles;\r\n\r\n    const {name, size, type, lastModified} = uploadedFile;\r\n    \r\n    setFileData({\r\n      name,\r\n      size,\r\n      type,\r\n      lastModified\r\n    }); \r\n\r\n    const fileReader = new FileReader();\r\n    // base64 string \r\n    fileReader.readAsDataURL(uploadedFile); \r\n    \r\n    fileReader.onload = (e) => { \r\n      // convert then save      \r\n      setPreviewSrc(fileReader.result);\r\n    };\r\n    \r\n    setImageError('');\r\n    dropRef.current.style.border = '5px dashed #f3e6ef';\r\n  }\r\n\r\n  const onDropRejected = () => {    \r\n    setImageError('File type must be image');\r\n  }\r\n\r\n  const updateBorder = (dragState) => {\r\n    if (dragState === 'over') {\r\n      dropRef.current.style.border = '5px solid #723c62';\r\n    } else if (dragState === 'leave') {\r\n      dropRef.current.style.border = '5px dashed #f3e6ef';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"drop-zone-container\">    \r\n      <Dropzone       \r\n        accept={\"image/*\"}\r\n        maxFiles={1}\r\n        onDropAccepted={onDropAccepted}\r\n        onDropRejected={onDropRejected} \r\n        onDragOver={() => updateBorder('over')}             \r\n        onDragEnter={() => updateBorder('over')}\r\n        onDragLeave={() => updateBorder('leave')}\r\n      >\r\n        {({ getRootProps, getInputProps }) => (\r\n          <div {...getRootProps({ className: 'drop-zone' })} ref={dropRef} >\r\n            <input {...getInputProps()} />\r\n            <p>Drag and drop a image OR click here to select a image</p>\r\n            {fileData && (\r\n              <div>\r\n                <strong>Selected file:</strong> {fileData.name}\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Dropzone> \r\n      { imageError && (\r\n        <span className=\"error-message\">{imageError}</span>\r\n      )}\r\n      <FilerobotImageEditor\r\n        show={show}\r\n        src={previewSrc}\r\n        config={editorConfig}\r\n        onClose={onCloseEditor}        \r\n        onBeforeComplete= {onBeforeEditor}\r\n      /> \r\n      { previewSrc ? (\r\n        <span>\r\n          <div className=\"preview-area\">\r\n            <img src={previewSrc} alt=\"Preview\" />\r\n            <div className=\"button-positioner\">\r\n              <button type=\"button\" onClick={() =>{ toggle(true) }}>Edit</button>  \r\n            </div>\r\n          </div>\r\n        </span>\r\n      ) : (\r\n        <span className=\"preview-message\">\r\n          <p>\r\n            Image preview will be shown here after selection.  \r\n            <strong> If no image is loaded a default would be in place.</strong>\r\n          </p>\r\n        </span>\r\n      )} \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageUploader;","C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\utils\\constants.js",[],"C:\\Users\\HP\\Desktop\\EXPERIMENTOS\\react-product-upload\\src\\utils\\helpers.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":26},{"ruleId":"49","severity":1,"message":"53","line":12,"column":10,"nodeType":"51","messageId":"52","endLine":12,"endColumn":21},{"ruleId":"54","severity":1,"message":"55","line":28,"column":6,"nodeType":"56","endLine":28,"endColumn":28,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'submitError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onSetImage'. Either include it or remove the dependency array. If 'onSetImage' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [previewSrc, fileData, onSetImage]",{"range":"63","text":"64"},[795,817],"[previewSrc, fileData, onSetImage]"]